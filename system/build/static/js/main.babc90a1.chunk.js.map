{"version":3,"sources":["Components/add.js","Components/pairing.js","Components/history.js","Components/home.js","Components/router.js","App.js","serviceWorker.js","index.js"],"names":["Add","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","addstudent","_this$state","state","studentname","level","Axios","post","studentName","studentLevel","then","console","log","componentWillMount","catch","err","delete","_id","alert","edit","newlevel","put","id","newLevel","allStudents","_this2","get","_ref","data","_this3","react_default","a","createElement","type","placeholder","onChange","max","min","onClick","map","student","i","key","Component","Pairing","pair","pairsArray","checkedArray","randomNum","firstStudentsArray","secondStudentsArray","length","Math","floor","random","includes","push","j","z","show","save","axios","addToPairs","pop","pairsToShow","bind","History","history","index_es","row","component","scope","firstStudent","secondStudent","Home","style","paddingTop","NavLink","to","margin","Router","BrowserRouter","Switch","Route","exact","path","React","App","className","router","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.babc90a1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\n\nclass Add extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            studentname:'',\n            level:'',\n            allStudents:[],\n            newlevel:0\n      }\n    }\n\n    componentWillMount(){\n        \n        Axios.get('/getAllStudents')\n          .then(({data}) => {\n              console.log(data)\n              if(data){\n                  this.setState({\n                    allStudents:data\n                  })\n              }\n          })\n        .catch(err => {\n            console.log('failed to add student')\n            throw err;\n        })\n    };\n\n    handleChange = e =>  {\n        this.setState({\n          [e.target.name] :e.target.value\n        });\n      };\n\n      addstudent = () => {\n        const { studentname, level } = this.state;\n\n        Axios.post('/addStudent', {\n            studentName: studentname,\n            studentLevel: level\n          })\n\n        .then(() => {\n              console.log('students added') \n              this.componentWillMount()\n          })       \n        .catch(err => {\n\n            console.log('failed to add student')\n        })\n      };\n    \n      delete = e => {\n        Axios.delete('/deletestudent',{\n            _id: e.target.value,\n          })\n\n        .then (() => {\n          alert(\"student edited\")\n        })\n        .catch(err => {\n            console.log('failed to edit student')\n        })\n      }\n\n      edit = e => {\n        const { newlevel } =this.state;\n        Axios.put('/editlevel',\n          {\n            id: e.target.value,\n            newLevel: newlevel\n          })\n        .then(() => {\n            alert(\"student edited\")\n        })\n        .catch(err => {\n            console.log('failed to edit student')\n            throw err;\n\n        })\n      };\n    \n    render() {\n        const { allStudents } = this.state;\n        \n        return (\n        <div>\n            <h1>Add Student</h1>\n            <input type='text'\n                name='studentname'\n                placeholder='student name'\n                onChange={this.handleChange}\n                />\n                <input type='number'\n                name='level'\n                placeholder='level'\n                max='5'\n                min='0'\n                onChange={this.handleChange}\n                />\n                <button onClick={this.addstudent}>send</button>\n        \n                <hr />\n                <br />\n                {allStudents !== 0 ? \n                 allStudents.map((student,i) => {\n                    return(\n                        <h3 key={i}>{student.studentName}   \n                         {student.studentLevel} \n                        <input \n                            name='newlevel' \n                            type='number' \n                            min='0'\n                            max='5' \n                            onChange={this.handleChange} />\n                        <button value={student._id} onClick={this.edit} >edit</button>\n                        <button value={student._id} onClick={this.delete} >delete</button>\n                        </h3>  \n                    )\n                    })\n                :(<h2>there's no data</h2>)\n                }\n        </div>\n        )\n    }\n}\n\nexport default Add;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Pairing extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          show: false,\n          allStudents: [],\n          firstStudentsArray: [],\n          secondStudentsArray: [],\n          pairsArray: [],\n          pairsToShow: []\n        }\n      }\n\n    componentWillMount() {\n        axios.get('/getAllStudents')\n        .then(({data}) => {\n            if (!data.length % 2 === 0) {\n                data.push({\n                studentName: 'alone'\n                })\n            }\n            this.setState({\n                allStudents: data\n            })\n            })\n        .catch(err => {\n            console.log('failed to add student')\n            throw err;\n        })  \n    };\n\n    pair = () => {\n        let pairsArray = [];\n        let checkedArray = [];\n        let {allStudents} = this.state;\n        let randomNum = 0;\n        let firstStudentsArray = [];\n        let secondStudentsArray = [];\n        while(checkedArray.length<allStudents.length){\n          randomNum = Math.floor(Math.random() * allStudents.length) + 0;\n          if(!checkedArray.includes(randomNum)){\n            checkedArray.push(randomNum);\n          }\n        }\n      \n        for(let i=0;i<checkedArray.length;i=i+2){\n          let j = allStudents[checkedArray[i]].studentName;\n          let z = allStudents[checkedArray[i+1]].studentName;\n          pairsArray.push([j,z]);\n        }\n        for (let i = 0; i < pairsArray.length; i++) {\n          firstStudentsArray.push(pairsArray[i][0]);\n          secondStudentsArray.push(pairsArray[i][1]);\n        }\n        this.setState({\n          firstStudentsArray: firstStudentsArray,\n          secondStudentsArray: secondStudentsArray,\n          pairsArray: pairsArray,\n          show: true\n        })\n      }\n    \n\n    save = () => {\n        const { firstStudentsArray , secondStudentsArray } = this.state;\n        axios.post('/addHistory',\n          {\n            firstStudentsArray: firstStudentsArray,\n            secondStudentsArray: secondStudentsArray\n          })\n          .then((data) => {\n              this.addToPairs();\n          }) \n          .catch(err => {\n              throw err;\n          }) \n      }\n\n    addToPairs = () => {\n        let { pairsArray } = this.state ;\n        \n        if (pairsArray[pairsArray.length - 1].studentName === 'alone') {\n        pairsArray.pop();\n        }\n        axios.put('/editpair', {\n            pairsArray: pairsArray\n        })\n        .then(() => {\n            console.log('saved');\n\n        }) \n        .catch (() => {\n            console.log('failed')\n        });\n    }\n\n    render() {\n        return (\n        <div>\n            <button onClick={this.pair.bind(this)}>Pair</button>\n            <button onClick={this.save.bind(this)}>save</button>\n            <hr />\n            {\n            this.state.show && <div>\n                {\n                this.state.pairsArray.map(function (pair, i) {\n                    return <h3 key={i}> {pair[0]}  WITH  {pair[1]}</h3>\n                })\n                }\n            </div>\n            }\n        </div>\n        )\n    }\n}\n\nexport default Pairing;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Table, TableBody, TableCell, TableHead,TableRow,Paper} from '@material-ui/core';\n\nclass History extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n        history:[]\n    }\n  }\n\n  componentWillMount(){\n  axios.get('/gethistory')\n    .then(({data}) => {\n      console.log(data)\n      this.setState({history: data})\n    })\n    .catch(err => {\n      throw err;\n    })\n  }\n  \n  render() {\n    const {history} = this.state;\n    return (\n      <Paper>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Studnet 1</TableCell>\n            <TableCell >Student 2</TableCell>\n            <TableCell>Studnet 1</TableCell>\n            <TableCell >Student 2</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {history ? history.map((row,i )=> {\n            return (\n                  <TableRow key={row.id}>\n\n                  \n                  <TableCell component=\"th\" scope=\"row\">\n                \n                {row.firstStudent[0]}\n                  </TableCell>\n\n                  \n                           \n                  <TableCell >\n                {row.secondStudent[0]}\n                   \n                    </TableCell>\n\n                  <TableCell component=\"th\" scope=\"row\">\n                \n                {row.firstStudent[1]}\n                  </TableCell>\n                  \n                    <TableCell >\n                {row.secondStudent[1]}\n                   \n                    </TableCell>\n                  </TableRow>\n          \n            );\n          }): null}\n        </TableBody>\n      </Table>\n    </Paper>\n    )\n  }\n\n}\n\nexport default History;\n","import React, { Component } from 'react';\nimport {NavLink} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <div style={{paddingTop: '50px'}}>\n\n          <NavLink to=\"/addStudent\" style={{margin: '10px'}}>\n            <button>Add Student</button>\n          </NavLink>\n\n          <NavLink to=\"/pairing\" style={{margin: '10px'}}>\n            <button> Pairing </button>\n          </NavLink>\n\n          <NavLink to=\"/history\" style={{margin: '10px'}}>\n            <button> History</button>\n          </NavLink>\n\n        </div>\n\n      </div>\n    )\n  }\n\n}\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Add from './add.js';\nimport Pairing from './pairing.js'\nimport History from './history.js'\nimport Home from './home';\n\nclass Router extends React.Component {\n    render () {\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route exact path='/' component= {Home} />\n                    <Route exact path='/addStudent' component={Add} />\n                    <Route exact path='/pairing' component={Pairing} />\n                    <Route exact path='/history' component={History} />\n                </Switch>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default Router;","import React, { Component } from 'react';\nimport Router from './Components/router.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Router />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}